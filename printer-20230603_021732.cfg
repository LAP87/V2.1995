[include toolhead_btt_ebbcan_G0B1_v1.2.cfg]
[include sensorless.cfg]
#[include tradrack_pico.cfg]
[include timelapse.cfg]
[include beeper.cfg]
[include stealthburner_led_effects_3_leds.cfg]
[include bed_mesh.cfg]
[include adaptive_purge.cfg]
[include client_macros.cfg]
[respond] #Enables log-output
[exclude_object]
[pause_resume]
recover_velocity: 250.0
[display_status]

[save_variables]
filename: /home/pi/printer_data/config/variables.cfg
#   Required - provide a filename that would be used to save the
#   variables to disk e.g. ~/variables.cfg


[virtual_sdcard]
path: /home/pi/printer_data/gcodes
on_error_gcode: CANCEL_PRINT

## Voron Design VORON2 300mm SKR 1.4 TMC2209 UART config

[mcu]
##--------------------------------------------------------------------
serial: /dev/serial/by-id/usb-Klipper_lpc1768_0B70FF10029175AF3C54FF5EC42000F5-if00
##--------------------------------------------------------------------

[mcu z]
##--------------------------------------------------------------------
serial: /dev/serial/by-id/usb-Klipper_lpc1768_1DD0001848104AAF5ECD675DC52000F5-if00
##--------------------------------------------------------------------

[mcu rpi]
serial: /tmp/klipper_host_mcu

#[adxl345]
#cs_pin: rpi:None

#[resonance_tester]
#accel_chip: adxl345
#probe_points:
#    150, 150, 25  # an example

[force_move]
enable_force_move: True

[printer]
kinematics: corexy
max_velocity: 450
max_accel: 5000
#max_accel_to_decel: 7000
max_z_velocity: 21			#Max 15 for 12V TMC Drivers, can increase for 24V
max_z_accel: 1500
square_corner_velocity: 10.0

#####################################################################
# 	X/Y Stepper Settings
#####################################################################

[stepper_x]
##	Connected to X on mcu_xye (B Motor)
step_pin: P2.2
dir_pin: P2.6
enable_pin: !P2.1
rotation_distance: 40
microsteps: 32
full_steps_per_rotation: 400  #set to 400 for 0.9 degree stepper
endstop_pin: tmc2209_stepper_x:virtual_endstop #P1.29
position_min: 0
position_endstop: 300
position_max: 300
homing_speed: 20   #Max 100
homing_retract_dist: 0
homing_positive_dir: true

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_x]
diag_pin: ^P1.29 # use the same pin that was previously the endstop_pin!
driver_SGTHRS: 100 #106
uart_pin: P1.10
interpolate: False
run_current: 1.0
#hold_current: 0.7
sense_resistor: 0.110
#stealthchop_threshold: 0 #999999

[stepper_y]
##	Connected to Y on mcu_xye (A Motor)
step_pin: P0.19
dir_pin: P0.20
enable_pin: !P2.8
rotation_distance: 40
microsteps: 32
full_steps_per_rotation: 400  #set to 400 for 0.9 degree stepper
endstop_pin: tmc2209_stepper_y:virtual_endstop #P1.28
position_min: 0
position_endstop: 300
position_max: 300
homing_speed: 20  #Max 100
homing_retract_dist: 0
homing_positive_dir: true

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_y]
diag_pin: ^P1.28 # use the same pin that was previously the endstop_pin!
driver_SGTHRS: 100 #106
uart_pin: P1.9
interpolate: False
run_current: 1.0
#hold_current: 0.7
sense_resistor: 0.110
#stealthchop_threshold: 0 #999999

 
#####################################################################
# 	Z Stepper Settings
#####################################################################

## Z MCU - In X Position
## Z0 Stepper - Front Left
[stepper_z]
step_pin: z:P2.2
dir_pin: z:P2.6
enable_pin: !z:P2.1
rotation_distance: 40
gear_ratio: 80:16
microsteps: 64
endstop_pin: probe:z_virtual_endstop #endstop_pin: z:P1.27
position_max: 260
position_min: -5
homing_speed: 10
second_homing_speed: 10
homing_retract_dist: 5

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z]
uart_pin: z:P1.10
interpolate: False
run_current: 0.8
#hold_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 999999

##	Z MCU - In Y Position
##	Z1 Stepper - Rear Left
[stepper_z1]
step_pin: z:P0.19
dir_pin: !z:P0.20
enable_pin: !z:P2.8
rotation_distance: 40
gear_ratio: 80:16
microsteps: 64

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z1]
uart_pin: z:P1.9
interpolate: False
run_current: 0.8
#hold_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 999999

##	Z MCU - In Z Position
##	Z2 Stepper - Rear Right
[stepper_z2]
step_pin: z:P0.22
dir_pin: z:P2.11
enable_pin: !z:P0.21
rotation_distance: 40
gear_ratio: 80:16
microsteps: 64

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z2]
uart_pin: z:P1.8
interpolate: False
run_current: 0.8
#hold_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 999999

##	Z MCU - In E0 Position
##	Z3 Stepper - Front Right
[stepper_z3]
step_pin: z:P2.13
dir_pin: !z:P0.11
enable_pin: !z:P2.12
rotation_distance: 40
gear_ratio: 80:16
microsteps: 64

##	Make sure to update below for your relevant driver (2208 or 2209)
[tmc2209 stepper_z3]
uart_pin: z:P1.4
interpolate: False
run_current: 0.8
#hold_current: 0.8
sense_resistor: 0.110
stealthchop_threshold: 999999


#####################################################################
# 	Extruder
#####################################################################

##	E0 on MCU X/Y
#[extruder]
#step_pin: P2.13
#dir_pin: P0.11
#enable_pin: !P2.12
#rotation_distance: 5.7
#microsteps: 16
#full_steps_per_rotation: 200
#nozzle_diameter: 0.400
#filament_diameter: 1.75
#max_extrude_cross_section: 50.0
#max_extrude_only_distance: 200.0
#heater_pin: P2.7
#sensor_type: ATC Semitec 104NT-4-R025H42G #ATC Semitec 104GT-2 #Generic 3950 
#sensor_pin: P0.24
#min_temp: -50
#max_temp: 300
#max_power: 1.0
#min_extrude_temp: 170
#pressure_advance: 0.19 #TPU 0.4
#pressure_advance: 0.020 #testing
##	Default is 0.040, leave stock
#pressure_advance_smooth_time: 0.040

##	E0 on MCU X/Y
##	Make sure to update below for your relevant driver (2208 or 2209)
#[tmc2209 extruder]
#uart_pin: P1.4
#interpolate: false
#run_current: 0.55
#hold_current: 0.4
#sense_resistor: 0.110
#stealthchop_threshold: 999999

#[filament_switch_sensor toolhead_sensor]
#pause_on_runout: False
#switch_pin: ^P1.27

#[filament_switch_sensor toolhead_sensor]
#pause_on_runout: True
#runout_gcode:
#    PAUSE
#    M117 Out of Filament
#insert_gcode:
#    M117 Resuming
#    RESUME
#event_delay: 3.0
#pause_delay: 0.5
#switch_pin: ^can0:AUX0

#[firmware_retraction]
# G10 to retract and G11 to unretract
#retract_length: 0.4
# unretract_extra_length: 0
#retract_speed: 30
#unretract_speed: 30

#####################################################################
# 	Bed Heater
#####################################################################

[heater_bed]
##	SSR Pin - Z board, Fan Pin
heater_pin: z:P2.3
#sensor_type: NTC 100K beta 3950
#sensor_type: Custom NTC100K B3950
sensor_type: Generic 3950
sensor_pin: z:P0.25
##	Adjust Max Power so your heater doesn't warp your bed
max_power: 1.0
min_temp: -30
max_temp: 125

#####################################################################
# 	Probe
#####################################################################

#[probe]
## EUCLID PROBE
#pin: z:P1.27 #^z:P0.10
#x_offset: 0
#y_offset: 0
#z_offset: 0
#speed: 10.0
#samples: 3
#samples_result: average
#sample_retract_dist: 1.0
#samples_tolerance: 0.010
#samples_tolerance_retries: 3
#lift_speed: 21
#drop_first_result: true

#activate_gcode:
#    {% set PROBE_TEMP = 150 %}
#    {% set MAX_TEMP = PROBE_TEMP + 5 %}
#    {% set ACTUAL_TEMP = printer.extruder.temperature %}
#    {% set TARGET_TEMP = printer.extruder.target %}

#    {% if TARGET_TEMP > PROBE_TEMP %}
#        { action_respond_info('Extruder temperature target of %.1fC is too high, lowering to %.1fC' % (TARGET_TEMP, PROBE_TEMP)) }
#        M109 S{ PROBE_TEMP }
#    {% else %}
#        # Temperature target is already low enough, but nozzle may still be too hot.
#        {% if ACTUAL_TEMP > MAX_TEMP %}
#            { action_respond_info('Extruder temperature %.1fC is still too high, waiting until below %.1fC' % (ACTUAL_TEMP, MAX_TEMP)) }
#            TEMPERATURE_WAIT SENSOR=extruder MAXIMUM={ MAX_TEMP }
#        {% endif %}
#    {% endif %}

[probe]
pin: can0:LIMIT_3
x_offset: 0
y_offset: 0
#z_offset: 0
speed: 10.0
samples: 3
sample_retract_dist: 1.0
lift_speed: 21.0
samples_result: median
samples_tolerance: 0.01
samples_tolerance_retries: 3
#drop_first_result: true

activate_gcode:
    {% set PROBE_TEMP = 150 %}
    {% set MAX_TEMP = PROBE_TEMP + 5 %}
    {% set ACTUAL_TEMP = printer.extruder.temperature %}
    {% set TARGET_TEMP = printer.extruder.target %}

    {% if TARGET_TEMP > PROBE_TEMP %}
        { action_respond_info('Extruder temperature target of %.1fC is too high, lowering to %.1fC' % (TARGET_TEMP, PROBE_TEMP)) }
        M109 S{ PROBE_TEMP }
    {% else %}
        # Temperature target is already low enough, but nozzle may still be too hot.
        {% if ACTUAL_TEMP > MAX_TEMP %}
            { action_respond_info('Extruder temperature %.1fC is still too high, waiting until below %.1fC' % (ACTUAL_TEMP, MAX_TEMP)) }
            TEMPERATURE_WAIT SENSOR=extruder MAXIMUM={ MAX_TEMP }
        {% endif %}
    {% endif %}

#####################################################################
# 	Fan Control
#####################################################################

#[heater_fan hotend_fan]
##	Hotend Fan - XYE board, HE1 Connector
#pin: P2.4
#max_power: 1.0
#cycle_time: 0.2
#kick_start_time: 0.5
#heater: extruder
#heater_temp: 70.0
##	If you are experiencing back flow, you can reduce fan_speed
#fan_speed: 1.0

#[fan]
##	Print Cooling Fan - XYE board, Fan Pin
#pin: P2.3
#max_power: 1.0
#cycle_time: 0.010
#kick_start_time: 0.5
##	Depending on your fan, you may need to increase this value
##	if your fan will not start. Can change cycle_time (increase)
##	if your fan is not able to slow down effectively
#off_below: 0.0
#shutdown_speed: 0.0

[heater_fan controller_fan]
##	Controller fan - Z board, HE1 Connector
pin: z:P2.4
max_power: 1.0
cycle_time: 0.2
kick_start_time: 1.0
heater: heater_bed
heater_temp: 55.0
fan_speed: 0.7


[fan_generic exhaust_fan]
##	Exhaust fan - Z board, HE0 Connector
pin: z:P2.7
max_power: 1.0
cycle_time: 0.2
shutdown_speed: 0.0
kick_start_time: 1.0
#heater: heater_bed
#heater_temp: 60
#fan_speed: 0.5

[output_pin nevermore]
##	Nevermore - Z board, Bed Connector
pin: z:P2.5
pwm: true
#max_power: 1.0
#cycle_time: 0.2
#off_below: 0.10
#shutdown_speed: 0.0
#kick_start_time: 0.5

#####################################################################
# 	LED Control
#####################################################################

#[output_pin caselight]
# Chamber Lighting - Bed Connector (Optional)
#pin: P2.5
#pwm:true
#shutdown_value: 0
#value:1
#cycle_time: 0.01

#####################################################################
# 	Homing and Gantry Adjustment Routines
#####################################################################

[idle_timeout]
timeout: 3600

#[safe_z_home]
##	XY Location of the Z Endstop Switch
##	Update -10,-10 to the XY coordinates of your endstop pin 
##	(such as 157,305) after going through Z Endstop Pin
##	Location Definition step.
#home_xy_position:150,150
#speed:300
#z_hop:10
#z_hop_speed:21 
#move_to_previous: False

[homing_override]
axes: yxz
set_position_z: 0
gcode:
  G90
  G0 Z10 F2000
  {% set home_all = 'X' not in params and 'Y' not in params and 'Z' not in params %}

  {% if home_all or 'X' in params %}
    _HOME_X
  {% endif %}
  
  {% if home_all or 'Y' in params %}
    _HOME_Y
  {% endif %}
  
  {% if home_all or 'Z' in params %}
    G90
    G0 X150 Y150 F5000
    G28 Z
    G1 Z10
  {% endif %}


[quad_gantry_level]
##	Use QUAD_GANTRY_LEVEL to level a gantry.
gantry_corners:
	-60,-10
	360,370
##	Probe points
points:
	50,25
	50,225
	250,225
	250,25
speed: 300
horizontal_move_z: 5
retries: 5
retry_tolerance: 0.01
max_adjust: 10

[bed_mesh]
speed: 300
horizontal_move_z: 1
mesh_min: 15,15
mesh_max: 285,285
#fade_start: 0.6
#fade_end: 10.0
#fade_target: 0
probe_count: 9,9
mesh_pps: 2,2
algorithm: bicubic
relative_reference_index: 40

#####################################################################
# 	Temperatures
#####################################################################

[temperature_sensor rpi]
sensor_type: temperature_host
sensor_path: /sys/class/thermal/thermal_zone0/temp
#   The path to temperature system file. The default is
#   "/sys/class/thermal/thermal_zone0/temp" which is the temperature
#   system file on a Raspberry Pi computer.

#[temperature_sensor mcu]
#sensor_type: temperature_mcu
#sensor_mcu: mcu
#   The micro-controller to read from. The default is "mcu".
#sensor_temperature1:
#sensor_adc1:
#   Specify the above two parameters (a temperature in Celsius and an
#   ADC value as a float between 0.0 and 1.0) to calibrate the
#   micro-controller temperature. This may improve the reported
#   temperature accuracy on some chips. A typical way to obtain this
#   calibration information is to completely remove power from the
#   printer for a few hours (to ensure it is at the ambient
#   temperature), then power it up and use the QUERY_ADC command to
#   obtain an ADC measurement. Use some other temperature sensor on
#   the printer to find the corresponding ambient temperature. The
#   default is to use the factory calibration data on the
#   micro-controller (if applicable) or the nominal values from the
#   micro-controller specification.
#sensor_temperature2:
#sensor_adc2:
#   If sensor_temperature1/sensor_adc1 is specified then one may also
#   specify sensor_temperature2/sensor_adc2 calibration data. Doing so
#   may provide calibrated "temperature slope" information. The
#   default is to use the factory calibration data on the
#   micro-controller (if applicable) or the nominal values from the
#   micro-controller specification.


#####################################################################
# 	Displays
#####################################################################

[display]
##	mini12864 LCD Display
lcd_type: uc1701
cs_pin: P1.18
a0_pin: P1.19
encoder_pins: ^P3.25,^P3.26
click_pin: ^!P0.28
contrast: 63

[neopixel fysetc_mini12864]
##	To control Neopixel RGB in mini12864 display
pin: P1.21
chain_count: 3
initial_RED: 0.1
initial_GREEN: 0.5
initial_BLUE: 0.0
color_order: RGB

##	Set RGB values on boot up for each Neopixel. 
##	Index 1 = display, Index 2 and 3 = Knob
[delayed_gcode setdisplayneopixel]
initial_duration: 1
gcode:
        SET_LED LED=fysetc_mini12864 RED=0 GREEN=0 BLUE=0 INDEX=1 TRANSMIT=0 #Knob_1
        SET_LED LED=fysetc_mini12864 RED=0 GREEN=0 BLUE=0 INDEX=2 TRANSMIT=0 #Knob_2
        SET_LED LED=fysetc_mini12864 RED=0 GREEN=1 BLUE=0 INDEX=3 #Display

#--------------------------------------------------------------------


#####################################################################
# 	Macros
#####################################################################

[gcode_arcs]
resolution: 0.1
#   An arc will be split into segments. Each segment's length will
#   equal the resolution in mm set above. Lower values will produce a
#   finer arc, but also more work for your machine. Arcs smaller than
#   the configured value will become straight lines. The default is
#   1mm.

[gcode_macro G32]
gcode:
    G28
    QUAD_GANTRY_LEVEL
    G28 Z

[gcode_macro PRINT_START]
gcode:        
    # Parameters
    {% set bedtemp = params.BED|default(110)|int %}
    {% set hotendtemp = params.EXTRUDER|default(240)|int %}
    {% set FL_SIZE = params.SIZE|default("0_0_0_0")|string %}
    {% set filament_type = params.FILAMENT|default("ABS")|upper %}
        {action_respond_info('==== PRINT_START ====')}
        {action_respond_info("targets [bed: %s, extruder: %s, chamber: %s, filament_type: %s, FL_SIZE: %s]" % (target_bed,target_extruder,target_chamber,filament_type,FL_SIZE))}

    G21 ; set units to millimeters
    G90 ; use absolute coordinates
    M83 ; use relative distances for extrusion
    CLEAR_PAUSE
    BED_MESH_CLEAR
    COMPUTE_MESH_PARAMETERS SIZE={FL_SIZE}
    #set_pin pin=nevermore value=1.0
    
        {% if filament_type == "PLA" or filament_type == "FLEX" %}
    
    set_pin pin=nevermore value=0
    STATUS_LEVELING
    G32 ; leveling gantry
    STATUS_MESHING
    ADAPTIVE_BED_MESH ; adaptive bed mesh macro
    STATUS_HEATING
    M190 S{bedtemp} ; wait for bed temp
    M109 S{hotendtemp} ; wait for hotend temp
    STATUS_READY
    STATUS_PRINTING
    #PURGE_LINE ## extrude molten plastic in a line ¯\_(ツ)_/¯
    
    
        {% else %}
    
    STATUS_HEATING
    M190 S{bedtemp} ; wait for bed temp
    STATUS_LEVELING
    G32 ; leveling gantry
    STATUS_MESHING
    ADAPTIVE_BED_MESH ; adaptive bed mesh macro
    STATUS_HEATING
    M109 S{hotendtemp} ; wait for hotend temp
    STATUS_PRINTING
    set_pin pin=nevermore value=0.4
    #PURGE_LINE ## extrude molten plastic in a line ¯\_(ツ)_/¯
        
        {% endif %}

[gcode_macro PRINT_START_MMU]
gcode:        
    # Parameters
    {% set bedtemp = params.BED|default(110)|int %}
    {% set hotendtemp = params.EXTRUDER|default(240)|int %}
    {% set FL_SIZE = params.SIZE|default("0_0_0_0")|string %}
    {% set filament_type = params.FILAMENT|default("ABS")|upper %}
        {action_respond_info('==== PRINT_START ====')}
        {action_respond_info("targets [bed: %s, extruder: %s, chamber: %s, filament_type: %s, FL_SIZE: %s]" % (target_bed,target_extruder,target_chamber,filament_type,FL_SIZE))}
    {% set lane = params.LANE|default(0)|int %}

    G21 ; set units to millimeters
    G90 ; use absolute coordinates
    M83 ; use relative distances for extrusion
    BED_MESH_CLEAR
    COMPUTE_MESH_PARAMETERS SIZE={FL_SIZE}
    #set_pin pin=nevermore value=1.0
    
        {% if filament_type == "PLA" or filament_type == "FLEX" %}
    
    set_pin pin=nevermore value=0
    STATUS_LEVELING
    G32 ; leveling gantry
    STATUS_MESHING
    ADAPTIVE_BED_MESH ; adaptive bed mesh macro
    G91
    G0 Z5 F1800 ; raise nozzle
    G90
    TR_PRINT_START EXTRUDER={hotendtemp} LANE={lane}
    STATUS_HEATING
    M109 S{hotendtemp} ; wait for hotend temp
    STATUS_READY
    STATUS_PRINTING
    #PURGE_LINE ## extrude molten plastic in a line ¯\_(ツ)_/¯
    
    
        {% else %}
    
    STATUS_HEATING
    M190 S{bedtemp} ; wait for bed temp
    STATUS_LEVELING
    G32 ; leveling gantry
    STATUS_MESHING
    ADAPTIVE_BED_MESH ; adaptive bed mesh macro
    G91
    G0 Z5 F1800 ; raise nozzle
    G90
    TR_PRINT_START
    STATUS_HEATING
    M109 S{hotendtemp} ; wait for hotend temp
    STATUS_PRINTING
    set_pin pin=nevermore value=0.4
    #PURGE_LINE ## extrude molten plastic in a line ¯\_(ツ)_/¯
        
        {% endif %}

[gcode_macro CURA_START]
#   Use CURA_START for the slicer starting script - please customise for your slicer of choice
gcode:
    # Parameters
    {% set bedtemp = params.BED|default(110)|int %}
    {% set hotendtemp = params.EXTRUDER|default(240)|int %}
    {% set FL_SIZE = params.SIZE|default("0_0_0_0")|string %}
    COMPUTE_MESH_PARAMETERS SIZE={FL_SIZE}
    CLEAR_PAUSE
    BED_MESH_CLEAR
    M190 S{bedtemp}
    G32 ; home all axes
    ADAPTIVE_BED_MESH
    set_pin pin=nevermore value=0.6
    M109 S{hotendtemp}
    STATUS_PRINTING
    #PURGE_LINE

[gcode_macro PURGE_LINE]
gcode:
    G90
    G0 X270 Y5 Z0.3 F6000         ; Move to start position
    G92 E0                        ; Reset Extruder
    G1 E7 F600                   ; Extrude a little
    G1 X10 E60 F1000              ; Draw line
    G92 E0                        ; Reset Extruder
    G91                           ; relative positioning
    G0 X50 F15000                 ; Wipe line 1
    G0 X-40 F15000                ; Wipe line 2
    G1 E-0.3 F3600
    G0 Z5 F1800                  ; Raise nozzle
    G90

[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
gcode:
    {% set unload = params.UNLOAD_AT_END|default(0)|int %}
    SET_FILAMENT_SENSOR SENSOR=encoder_sensor ENABLE=0
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G91                            ; relative positioning
    G0 Z1.00 X20.0 Y20.0 F18000    ; move nozzle to remove stringing
    TURN_OFF_HEATERS
    G1 Z2 F3000                    ; move nozzle up 2mm
    G90                            ; absolute positioning
    G0  X270 Y270 F3600            ; park nozzle at rear
    G1 E-10.0 F3600                ; retract filament
    {% if unload|int == 1%}
        ERCF_EJECT
    {% endif %}
    set_pin pin=nevermore value=0
    M107                           ; turn off fan
    BED_MESH_CLEAR

## 	Thermistor Types
##   "EPCOS 100K B57560G104F"
##   "ATC Semitec 104GT-2"
##   "NTC 100K beta 3950"
##   "Honeywell 100K 135-104LAG-J01"
##   "NTC 100K MGB18-104F39050L32" (Keenovo Heater Pad)
##   "AD595"
##   "PT100 INA826"

#z_offset = -0.375 // textured plate
# z_offset = -0.335 // 310 flat shapes plate // revo voron
# z_offset = -0.335 // 300 flat carbon fiber plate // revo voron

# [extruder] revo voron
# control = pid
# pid_kp = 28.248
# pid_ki = 3.363
# pid_kd = 59.321

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 57.924
#*# pid_ki = 1.313
#*# pid_kd = 638.616
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 29.303
#*# pid_ki = 1.491
#*# pid_kd = 143.945
#*#
#*# [input_shaper]
#*# shaper_type_x = mzv
#*# shaper_freq_x = 51.6
#*# shaper_type_y = mzv
#*# shaper_freq_y = 52.8
#*#
#*# [probe]
#*# z_offset = -0.325
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  -0.020625, 0.003125, 0.003750, 0.010625, -0.003125
#*# 	  -0.023125, -0.004375, 0.000625, 0.003750, -0.008125
#*# 	  -0.015000, -0.000625, 0.000000, 0.004375, -0.005000
#*# 	  -0.013125, -0.004375, -0.002500, -0.004375, -0.013125
#*# 	  0.003125, 0.015000, 0.012500, 0.008125, -0.001875
#*# x_count = 5
#*# y_count = 5
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 91.0
#*# max_x = 208.0
#*# min_y = 91.0
#*# max_y = 208.0
